@IsTest
private class QueryBuilderTest {
    @IsTest
    static void canSelectFromAnObject_systemDb() {
        // Given an account in the DB
        QDB.useSystemDB();
        Account account = new Account(Name = 'Test Account');
        QDB.getInstance().doInsert(account);

        // By default when you don't specify any fields, it is going to select the Id
        QueryBuilder builder = QueryBuilder.of('Account');

        // When I run the query
        List<Account> accounts = QDB.getInstance().query(builder);

        Assert.areEqual(1, accounts.size());
        Assert.areEqual(account.Id, accounts[0].Id);
    }

    @IsTest
    static void canSelectFromAnObject_inMemory() {
        Account account = new Account(Name = 'Test Account');
        QDB.getInstance().doInsert(account);

        // By default when you don't specify any fields, it is going to select the Id
        QueryBuilder builder = QueryBuilder.of('Account');

        // When I run the query
        List<Account> accounts = QDB.getInstance().query(builder);

        Assert.areEqual(1, accounts.size());
        Assert.areEqual(account.Id, accounts[0].Id);
    }

    @IsTest
    static void canSelectFromAnyObject_systemDb() {
        QDB.useSystemDB();
        Contact someContact = new Contact(LastName = 'Test Contact');
        QDB.getInstance().doInsert(someContact);

        QueryBuilder builder = QueryBuilder.of('Contact');

        List<Contact> contacts = QDB.getInstance().query(builder);

        Assert.areEqual(1, contacts.size());
        Assert.areEqual(someContact.Id, contacts[0].Id);
    }

    @IsTest
    static void canSelectFromAnyObject_inMemoryDb() {
        Contact someContact = new Contact(LastName = 'Test Contact');
        Account someAccount = new Account(Name = 'Test Account');
        QDB.getInstance().doInsert(
            new List<SObject> {
                someContact,
                someAccount
            }
        );

        QueryBuilder builder = QueryBuilder.of('Contact');

        List<Contact> contacts = QDB.getInstance().query(builder);

        Assert.areEqual(1, contacts.size());
    }

    @IsTest
    static void idsAreAutoGeneratedWhenInsertingSomethingIntoTheInMemoryDB() {
        Contact someContact = new Contact(LastName = 'Test Contact');
        QDB.getInstance().doInsert(someContact);

        QueryBuilder builder = QueryBuilder.of('Contact');

        List<Contact> contacts = QDB.getInstance().query(builder);

        Assert.isNotNull(contacts[0].Id);
    }


    // RED, GREEN, REFACTOR
    // TODO: Support bulk insert
    // TODO: Can query specific fields out of an object
}
